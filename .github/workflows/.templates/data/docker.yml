#@ load("@ytt:struct", "struct")

#! Constant
#@ image = "${{ github.repository }}"
#@ buildx_cache = "/tmp/.buildx-cache"

#@data/values
---
trigger:
  paths:
    - ".dockerignore"
    - ".dockleignore"
    - ".github/workflows/docker-*.yml"
    - "**/Dockerfile*"

env:
  image:  #@ image

steps:
  #! setup docker buildx
  #!
  #! refs: https://github.com/marketplace/actions/docker-setup-buildx
  setup_buildx:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    #! use cache in github actions
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path:  #@ buildx_cache
        key: "\
          ${{ env.CACHE_PREFIX }}-${{ env.CACHE_NAME }}-${{ github.ref }}-\
          ${{ hashFiles('**/Dockerfile') }}"
        restore-keys: |
          ${{ env.CACHE_PREFIX }}-${{ env.CACHE_NAME }}-${{ github.ref }}-
          ${{ env.CACHE_PREFIX }}-${{ env.CACHE_NAME }}-
          ${{ env.CACHE_PREFIX }}-dockerfile-
      env:
        CACHE_PREFIX: ${{ runner.os }}-build
        CACHE_NAME: rust-dockerfile

  #! run docker buildx
  #!
  #! refs: https://github.com/marketplace/actions/build-and-push-docker-images
  run_buildx:
    #@yaml/text-templated-strings
    - name: Build
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: false
        context: "."
        platforms: |
          linux/amd64
          linux/arm64
        tags: |
          ${{ env.BUILD_IMAGE }}:latest
          ${{ env.BUILD_IMAGE }}:v1
        cache-from: |
          type=local,src= (@-= buildx_cache @)
        cache-to: |
          type=local,dest= (@-= buildx_cache -@) -new
      env:
        BUILD_IMAGE: (@= image @)

  move_cache:
    #@yaml/text-templated-strings
    - name: Move Cache
      run: |
        rm -rf (@= buildx_cache @)
        mv (@= buildx_cache @)-new (@= buildx_cache @)
